version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: tiater
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: tiater
      SERVICE_TAGS: dev
    volumes:
       - ./:/var/www
       - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    working_dir: /var/www
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: tiater_nginx
    restart: unless-stopped
    tty: true
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "13306:3306"
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker/mysql/conf/mysql-docker.cnf:/etc/mysql/my.cnf
    environment:
      MYSQL_DATABASE: database
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network

  testdb:
    build:
      context: docker/mysql/
      dockerfile: MySQL-5.6.Dockerfile
    ports:
      - 13308:3306
    environment:
      MYSQL_ROOT_PASSWORD: "${DBTEST_PASSWORD}"
      MYSQL_DATABASE: "${DBTEST_DATABASE}"
      MYSQL_USER: "${DBTEST_USERNAME}"
      MYSQL_PASSWORD: "${DBTEST_PASSWORD}"
      MYSQL_ROOT_HOST: "%"

#Docker Networks
networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local